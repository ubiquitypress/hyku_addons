<% if f.object.schema_driven? %>
	<% config = f.object.field_configs[key] || {} %>

	<% options = {
		required: config[:required],
		input_html: { class: "form-control", data: config.dig("form", "data") },
		placeholder: I18n.t("simple_form.placeholders.defaults.#{key}", default: "")
	} %>

	<% # TODO: Is there a better way of doing this? Maybe an input class. %>
	<% if config[:type] == "textarea" %>
		<% options.merge!(as: :text) %>
		<% options[:input_html].merge!(rows: 7, type: "textarea") %>
	<% end %>

	<% options.merge!(as: :multi_value) if config[:multiple] %>

	<% # Allow us to override the input if we really need to %>
	<% options.merge!(as: config[:input]) if config[:input] %>

	<!-- _default <%= key %> -->
	<%= f.input key, options %>

<% else %>
	<% if f.object.multiple? key %>
		<%= f.input key,
			as: :multi_value,
			input_html: { class: "form-control" },
			required: f.object.required?(key),
			placeholder: lambda {
				key = "simple_form.placeholders.defaults.#{key}"
				I18n.exists?(key) ? t(key) : ""
			}.call
		%>
	<% else %>
		<%= f.input key, required: f.object.required?(key) %>
	<% end %>
<% end %>
