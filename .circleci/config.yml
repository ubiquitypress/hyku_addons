version: 2.1
orbs:
  samvera: samvera/circleci-orb@0
jobs:
  bundle_lint_test:
    parameters:
      ruby_version:
        type: string
        default: 2.7.1
      bundler_version:
        type: string
        default: 2.1.4
      rails_version:
        type: string
        default: 5.2.4.3

    executor:
      name: 'samvera/ruby_fcrepo_solr_redis_postgres'
      ruby_version: << parameters.ruby_version >>

    parallelism: 4

    environment:
      RAILS_VERSION: << parameters.rails_version >>
      DATABASE_NAME: circle_test
      DATABASE_HOST: 127.0.0.1
      DATABASE_USER: postgres
      DATABASE_TEST_NAME: circle_test
      BUNDLE_PATH: vendor/bundle
      COVERALLS_PARALLEL: true
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      RAILS_ENV: test
      RACK_ENV: test
      FCREPO_TEST_PORT: 8080/fcrepo
      SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      CFLAGS: -Wno-error=format-overflow
      # Enable bulkrax to avoid test failures due to odd view path order
      SETTINGS__BULKRAX__ENABLED: true

    steps:
      - run:
          name: Install the FITS
          command: |
            mkdir ~/fits
            wget "https://github.com/harvard-lts/fits/releases/download/1.4.1/fits-1.4.1.zip"
            unzip -d ~/fits/ "fits-1.4.1.zip"
            chmod a+x ~/fits/fits.sh
            ln -s ~/fits/fits.sh ~/fits/fits
            rm "fits-1.4.1.zip"
            echo "export PATH=$HOME/fits:$PATH" >> $BASH_ENV
            source $BASH_ENV

      - samvera/cached_checkout

      - run: git submodule init && git submodule update

      # FIXME: caching is not working
      - samvera/bundle:
          ruby_version: << parameters.ruby_version >>
          bundler_version: << parameters.bundler_version >>

      - samvera/rubocop

      - samvera/install_solr_core:
          solr_config_path: 'spec/internal_test_hyku/solr/config'

      # Setup hyku_addons and hyrax-doi
      - run: bundle exec rails g hyku_addons:install

      - run: bundle exec rake app:db:create app:db:migrate app:zookeeper:upload

      # Setup CodeClimate
      - run:
          command: |
            if [[ $(command -v cc-test-reporter) == "" ]]; then
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.7.0-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
            fi
      - run:
          command: ./cc-test-reporter before-build
          
      # - samvera/parallel_rspec
      - run:
          name: Run rspec in parallel
          command: |
            mkdir /tmp/test-results
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | grep -v "internal_test_hyku" | circleci tests split --split-by=timings)

      # collect reports
      - store_test_results:
         path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      # Save coverage results for CodeClimate
      - run:
          command: ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json

      - store_artifacts:
          path: coverage

  # Upload coverage to CodeClimate
  upload_coverage:
    parameters:
      parallelism:
        type: integer
        default: 4
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: ~/project

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.7.0-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - deploy:
          # CC_TEST_REPORTER_ID set within the circleci web interface
          command: ./cc-test-reporter sum-coverage --output - --parts << parameters.parallelism >> codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

workflows:
  ci:
    jobs:
      - bundle_lint_test:
          name: ruby2-7-1
      - upload_coverage:
          requires:
            - ruby2-7-1
