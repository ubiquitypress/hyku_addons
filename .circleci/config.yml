version: 2.1

orbs:
  ubiquity-orb:
    commands:
      bundle:
        description: Bundles and caches app and gem.
        parameters:
          bundler_version:
            default: 2.0.1
            type: string
          ruby_version:
            type: string
        steps:
        - run:
            command: |
              echo $(find . -d 1 -type f \( -name "Gemfile*" -o -name "*.gemspec" \) -exec md5sum {} \; | md5sum | cut -d' ' -f1) >> BUNDLE_CACHE_KEY
            name: Generate a cache key for the bundle
        - restore_cache:
            keys:
            - v1-bundle-{{ BUNDLE_CACHE_KEY }}-<< parameters.ruby_version >>-<< parameters.bundler_version
              >>
            name: Restore bundle from cache
        - run:
            command: |
              echo 'export BUNDLER_VERSION=<< parameters.bundler_version >>' >> $BASH_ENV
              gem install bundler -v << parameters.bundler_version >>
            name: Update bundler
        - run:
            command: bundle check || bundle install
            name: Install dependencies
        - save_cache:
            key: v1-bundle-{{ BUNDLE_CACHE_KEY }}-<< parameters.ruby_version >>-<< parameters.bundler_version
              >>
            name: Save bundle cache
            paths:
            - ~/project/vendor/bundle
      bundle_for_gem:
        description: Bundles and caches a gem.
        parameters:
          bundler_version:
            default: 2.0.1
            type: string
          project:
            type: string
          ruby_version:
            type: string
        steps:
        - restore_cache:
            keys:
            - v1-bundle-{{ checksum "Gemfile" }}--{{ checksum "<< parameters.project >>.gemspec"
              }}-<< parameters.ruby_version >>
            name: Restore bundle from cache
        - run:
            command: |
              echo 'export BUNDLER_VERSION=<< parameters.bundler_version >>' >> $BASH_ENV
              gem install bundler -v << parameters.bundler_version >>
            name: Update bundler
        - run:
            command: bundle check || bundle install
            name: Install dependencies
        - save_cache:
            key: v1-bundle-{{ checksum "Gemfile" }}--{{ checksum "<< parameters.project
              >>.gemspec" }}-<< parameters.ruby_version >>
            name: Save bundle cache
            paths:
            - ~/project/vendor/bundle
      cached_checkout:
        description: Perform a cache-enabled git checkout.
        steps:
        - restore_cache:
            keys:
            - v1-source-{{ .Branch }}-{{ .Revision }}
            name: Restore code from cache
        - checkout
        - save_cache:
            key: v1-source-{{ .Branch }}-{{ .Revision }}
            name: Save code cache
            paths:
            - .git
      engine_cart_generate:
        description: Use engine_cart to generate an internal test app and caches it.
        parameters:
          cache_key:
            type: string
        steps:
        - restore_cache:
            keys:
            - << parameters.cache_key >>
            name: Restore test app from cache
        - run:
            command: |
              [ -e ./.internal_test_app ] || bundle exec rake engine_cart:generate
            name: Generate test app
        - save_cache:
            key: << parameters.cache_key >>
            name: Save test app cache
            paths:
            - ./.internal_test_app
      install_solr_core:
        description: Installs a solr core into a running Solr docker container.
        parameters:
          core_name:
            default: hydra-test
            type: string
          solr_config_path:
            default: solr/config
            type: string
          solr_port:
            default: "8985"
            type: string
        steps:
        - run:
            command: dockerize -wait tcp://localhost:<< parameters.solr_port >> -timeout
              1m
            name: Wait for Solr
        - run:
            command: |
              cd << parameters.solr_config_path >>
              zip -1 -r solr_config.zip ./*
              curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://localhost:<< parameters.solr_port >>/solr/admin/configs?action=UPLOAD&name=solrconfig"
              curl -H 'Content-type: application/json' http://localhost:<< parameters.solr_port >>/api/collections/ -d '{create: {name: << parameters.core_name >>, config: solrconfig, numShards: 1}}'
            name: Load config into solr
      parallel_rspec:
        description: Run RSpec in Parallel, storing test_results for CircleCI to parse.
        steps:
        - run:
            command: |
              mkdir /tmp/test-results
              bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            name: Run rspec in parallel
        - store_test_results:
            path: /tmp/test-results
        - store_artifacts:
            destination: test-results
            path: /tmp/test-results
      rubocop:
        description: Runs rubocop
        steps:
        - run:
            command: bundle exec rubocop
            name: Call Rubocop
    description: |
      A set of tasks to centralize testing infrastructure for Samvera Core Components
    executors:
      ruby:
        description: Box just Ruby
        docker:
        - image: circleci/<< parameters.ruby_type >>:<< parameters.ruby_version >>-node-browsers-legacy
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_PATH: vendor/bundle
          BUNDLE_RETRY: 3
          RACK_ENV: test
          RAILS_ENV: test
          SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml
            --format progress
        parameters:
          ruby_type:
            default: ruby
            type: string
          ruby_version:
            default: 2.5.5
            type: string
      ruby_fcrepo_solr:
        description: Box running FCRepo, Solr, and Ruby.
        docker:
        - image: circleci/<< parameters.ruby_type >>:<< parameters.ruby_version >>-node-browsers-legacy
        - environment:
            CATALINA_OPTS: -Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m
              -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m
              -XX:+DisableExplicitGC
          image: ualbertalib/docker-fcrepo4:<< parameters.fcrepo_version>>
        - command: bin/solr -cloud -noprompt -f -p <<parameters.solr_port>>
          image: solr:7-alpine
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_PATH: vendor/bundle
          BUNDLE_RETRY: 3
          FCREPO_TEST_PORT: 8080/fcrepo
          RACK_ENV: test
          RAILS_ENV: test
          SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml
            --format progress
        parameters:
          fcrepo_version:
            default: "4.7"
            type: string
          ruby_type:
            default: ruby
            type: string
          ruby_version:
            default: 2.5.5
            type: string
          solr_port:
            default: "8985"
            type: string
      ruby_fcrepo_solr_redis:
        description: Box running FCRepo, Solr, Ruby, and Redis.
        docker:
        - image: circleci/<< parameters.ruby_type >>:<< parameters.ruby_version >>
        - environment:
            CATALINA_OPTS: -Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m
              -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m
              -XX:+DisableExplicitGC
          image: ualbertalib/docker-fcrepo4:<< parameters.fcrepo_version>>
        - command: bin/solr -cloud -noprompt -f -p <<parameters.solr_port>>
          image: solr:7-alpine
        - image: circleci/redis:<<parameters.redis_version>>
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_PATH: vendor/bundle
          BUNDLE_RETRY: 3
          FCREPO_TEST_PORT: 8080/fcrepo
          RACK_ENV: test
          RAILS_ENV: test
          SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml
            --format progress
        parameters:
          fcrepo_version:
            default: "4.7"
            type: string
          redis_version:
            default: "4"
            type: string
          ruby_type:
            default: ruby
            type: string
          ruby_version:
            default: 2.5.5
            type: string
          solr_port:
            default: "8985"
            type: string
      ruby_fcrepo_solr_redis_postgres:
        description: Box running FCRepo, Solr, Ruby, Redis, Postgres.
        docker:
        - image: circleci/<< parameters.ruby_type >>:<< parameters.ruby_version >>
        - environment:
            CATALINA_OPTS: -Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m
              -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m
              -XX:+DisableExplicitGC
          image: ualbertalib/docker-fcrepo4:<< parameters.fcrepo_version>>
        - command: bin/solr -cloud -noprompt -f -p <<parameters.solr_port>>
          image: solr:7-alpine
        - image: circleci/redis:<<parameters.redis_version>>
        - image: circleci/postgres:9.6.2-alpine
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_PATH: vendor/bundle
          BUNDLE_RETRY: 3
          FCREPO_TEST_PORT: 8080/fcrepo
          POSTGRES_DB: circle_test
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: postgres
          RACK_ENV: test
          RAILS_ENV: test
          SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml
            --format progress
        parameters:
          fcrepo_version:
            default: "4.7"
            type: string
          redis_version:
            default: "4"
            type: string
          ruby_type:
            default: ruby
            type: string
          ruby_version:
            default: 2.5.5
            type: string
          solr_port:
            default: "8985"
            type: string


jobs:
  bundle_lint_test:
    resource_class: ubiquitypress/self-hosted    
    parameters:
      ruby_version:
        type: string
        default: 2.7.1
      bundler_version:
        type: string
        default: 2.1.4
      rails_version:
        type: string
        default: 5.2.4.3

    executor:
      name: 'ubiquity-orb/ruby_fcrepo_solr_redis_postgres'
      ruby_version: << parameters.ruby_version >>

    environment:
      RAILS_VERSION: << parameters.rails_version >>
      DATABASE_NAME: circle_test
      DATABASE_HOST: 127.0.0.1
      DATABASE_USER: postgres
      DATABASE_TEST_NAME: circle_test
      BUNDLE_PATH: vendor/bundle
      COVERALLS_PARALLEL: "true"
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      RAILS_ENV: test
      RACK_ENV: test
      FCREPO_TEST_PORT: 8080/fcrepo
      SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      CFLAGS: -Wno-error=format-overflow
      # Enable bulkrax to avoid test failures due to odd view path order
      SETTINGS__BULKRAX__ENABLED: "true"
      RUBYOPT: "-W:no-deprecated -W:no-experimental"
      REDIS_NAMESPACE_QUIET: "true"

    steps:
      - run:
          name: Install the FITS
          command: |
            mkdir ~/fits
            wget "https://github.com/harvard-lts/fits/releases/download/1.4.1/fits-1.4.1.zip"
            unzip -d ~/fits/ "fits-1.4.1.zip"
            chmod a+x ~/fits/fits.sh
            ln -s ~/fits/fits.sh ~/fits/fits
            rm "fits-1.4.1.zip"
            echo "export PATH=$HOME/fits:$PATH" >> $BASH_ENV
            source $BASH_ENV

      - ubiquity-orb/cached_checkout

      - run:
          name: Install Hyku Base
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts && git submodule init && GIT_TERMINAL_PROMPT=0 git submodule update

      # FIXME: caching is not working
      # https://circleci.com/developer/orbs/orb/samvera/circleci-orb#commands-bundle
      - ubiquity-orb/bundle:
          ruby_version: << parameters.ruby_version >>
          bundler_version: << parameters.bundler_version >>

      - ubiquity-orb/rubocop

      - ubiquity-orb/install_solr_core:
          solr_config_path: 'spec/internal_test_hyku/solr/config'

      - run:
          name: Install Hyku Addons and Additional Plugins
          command: |
            bundle exec rails g hyku_addons:install

      - run:
          name: Migrate Database/Persistance
          command: |
            bundle exec rake app:db:create app:db:migrate app:zookeeper:upload

      - run:
          name: Setup CodeClimate
          command: |
            if [[ $(command -v cc-test-reporter) == "" ]]; then
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.7.0-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
            fi

      - run:
          command: ./cc-test-reporter before-build

      - run:
          name: Run RSpec in Parallel
          command: |
            mkdir /tmp/test-results
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | grep -v "internal_test_hyku" | circleci tests split --split-by=timings)

      # collect reports
      - store_test_results:
         path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - run:
          name: Save Coverage Results for CodeClimate
          command: ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"

      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json

      - store_artifacts:
          path: coverage

  # Upload coverage to CodeClimate
  upload_coverage:
    resource_class: ubiquitypress/self-hosted    
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: ~/project

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.7.0-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - deploy:
          # CC_TEST_REPORTER_ID set within the circleci web interface
          command: ./cc-test-reporter sum-coverage --output - --parts 1 codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

workflows:
  ci:
    jobs:
      - bundle_lint_test:
          name: ruby2-7-1
      - upload_coverage:
          requires:
            - ruby2-7-1
